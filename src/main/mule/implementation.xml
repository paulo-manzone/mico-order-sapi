<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:error-handler-plugin="http://www.mulesoft.org/schema/mule/error-handler-plugin" xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:salesforce-composite="http://www.mulesoft.org/schema/mule/salesforce-composite" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/salesforce-composite http://www.mulesoft.org/schema/mule/salesforce-composite/current/mule-salesforce-composite.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/error-handler-plugin http://www.mulesoft.org/schema/mule/error-handler-plugin/current/mule-error-handler-plugin.xsd">
	
	
	<flow name="postOrders" doc:id="330715d5-4129-406b-a445-fc883e0d68a1">
		<ee:transform doc:name="Transform payload to composite object" doc:id="f35b1cb5-c2b3-4723-9e4d-10739c3da391">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json

fun items(payload)=
	payload map(item, index)->{
		"method": "POST",
		"url": "/services/data/v49.0/sobjects/Item__c",
		"referenceId": "item" ++ index,
		"body": {
			"ItemId__c": item.id,
			"Category__c": item.category,
			"Quantity__c": item.quantity,
			"Size__c": item.size,
			"Order__c": "@{Order.id}"
			
			
			
		}
		
	}
---
{
	"allOrNone": true,
	"compositeRequest": [
		{
			"method": "POST",
			"url": "/services/data/v49.0/sobjects/Order__c",
			"referenceId":"Order",
			"body": {
				"PoNumber__c": payload.orderData.poNumber,
			 	"SignatureRequired__c": payload.orderData.signatureRequiredFlag,
			 	"ShipInstructions__c": payload.orderData.shipInstructions,
			 	"GiftWrapFlag__c": payload.orderData.giftWrapFlag,
			 	"GiftWrapMessage__c": payload.orderData.giftWrapMessage,
			 	"CurrencyCode__c": payload.orderData.currencyCode,
			 	"SubTotal__c": payload.orderData.subTotal,
			 	"Customer__c": payload.orderData.customerSalesforceId
			}
		}] 
		++
		items(payload.items)
}

]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<salesforce-composite:execute-composite-request doc:name="Execute composite request" doc:id="a01d9241-0d56-4b81-b5d2-dfec5dd29aba" config-ref="Salesforce_Composite_Config" />
		<set-variable value="#[payload.compositeResponse[0].body.id]" doc:name="Set Variable" doc:id="321bcdf6-80d1-45f1-aaff-1335a3535258" variableName="id" />
		<set-payload value="#[payload.compositeResponse]" doc:name="Set Payload" doc:id="b8a703b7-9c0b-43a6-a12b-bdc8c6220488" />
		<flow-ref doc:name="validatePost" doc:id="7783da2a-7bdd-4b1f-9967-0631665a90a0" name="validatePost" />
		<ee:transform doc:name="Transform payload to inserted entry id" doc:id="a94e71bc-5314-4735-93bb-f93f98bbab06">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"salesforceId": vars.id
}]]></ee:set-payload>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="outboundHeaders"><![CDATA[{
	"Location": "/orders/" ++ vars.id as String
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
	</flow>
	<sub-flow name="validatePost" doc:id="42f06da2-3ebd-4d64-a51f-9cffce9fd6c6" >
		<choice doc:name="Choice" doc:id="d6dfb8fb-2a0d-4b36-bc1e-add986019aa6" >
			<when expression="#[payload[0].httpStatusCode != 201]">
				<foreach doc:name="For Each" doc:id="baf4189c-6e19-4ad0-87eb-d4f6b391f3a0">
			<validation:is-true doc:name="Duplicate value validation" doc:id="87e8f236-414f-4ca6-83ae-60e0a722feb3" config-ref="Validation_Config" expression="#[payload.body[0].errorCode != 'DUPLICATE_VALUE']" message="Duplicate entry">
				<error-mapping sourceType="VALIDATION:INVALID_BOOLEAN" targetType="APP:DUPLICATE_ENTRY" />
			</validation:is-true>
					<validation:is-true doc:name="MalformedId value validation" doc:id="d325f658-bb44-403b-bd43-c1793caca585" expression="#[payload.body[0].errorCode != 'MALFORMED_ID']" message="Malformed id">
				<error-mapping sourceType="VALIDATION:INVALID_BOOLEAN" targetType="APP:MALFORMED_ID" />
			</validation:is-true>
		</foreach>
				<raise-error doc:name="Raise error" doc:id="9d68f32c-a5c2-43d9-88a3-9d17a9380687" type="APP:BAD_REQUEST"/>
			</when>
		</choice>
	</sub-flow>
	<flow name="getOrders" doc:id="c33b7549-4cff-4f0f-90b0-477395a38111" >
		<salesforce:query doc:name="Query Order" doc:id="50a1300e-d4cb-43a8-bd6b-ebbd4fda748b" config-ref="Salesforce_Config">
			<error-mapping targetType="APP:SERVER" />
			<salesforce:salesforce-query ><![CDATA[SELECT 	Id, PoNumber__c, SignatureRequired__c, ShipInstructions__c,
		GiftWrapFlag__c, GiftWrapMessage__c,
	 	CurrencyCode__c, SubTotal__c, Customer__c, 
	    (SELECT ItemId__c, Category__c, Quantity__c, Size__c, Order__c FROM Items__r) 
	 	FROM Order__c 
	 	WHERE Subtotal__c >= :initial AND Subtotal__c <= :final]]></salesforce:salesforce-query>
			<salesforce:parameters ><![CDATA[#[output application/json
---
{
	"initial": attributes.queryParams.'initialSubtotal' as Number,
	"final": attributes.queryParams.'finalSubtotal' as Number
}]]]></salesforce:parameters>
		</salesforce:query>
		<validation:is-not-empty-collection doc:name="Is not empty collection" doc:id="89d92a35-c463-49b8-a90c-7bb415c58af7" config-ref="Validation_Config" message="Get orders returned empty">
			<error-mapping sourceType="VALIDATION:EMPTY_COLLECTION" targetType="APP:NOT_FOUND" />
		</validation:is-not-empty-collection>
		<ee:transform doc:name="Transform SF to Json" doc:id="5333642c-e476-4cdb-b60c-5f5f99e134a5" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
message.payload map (order, orderIndex) -> {
		orderData:{
					"poNumber": order.PoNumber__c,
					"signatureRequiredFlag": order.SignatureRequired__c,
					"shipInstructions": order.ShipInstructions__c,
				    "giftWrapFlag": order.GiftWrapFlag__c,
				    "giftWrapMessage": order.GiftWrapMessage__c,
				    "currencyCode": order.CurrencyCode__c,
				    "subTotal": order.SubTotal__c,
				    "customerSalesforceId": order.Customer__c
				},
		items: 
			order.Items__r map (item, itemIndex) -> {
				id: item.ItemId__c,
				category: item.Category__c,
				quantity:item.Quantity__c,
				size: item.Size__c
			}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="getOrdersByPoNumber" doc:id="d9bf5508-d605-4ebd-86bf-0522db9bc942" >
		<salesforce:query doc:name="Query Order" doc:id="048e1be5-9028-4343-915b-56b3483f440c" config-ref="Salesforce_Config">
			<error-mapping targetType="APP:SERVER" />
			<salesforce:salesforce-query><![CDATA[SELECT 	Id, PoNumber__c, SignatureRequired__c, ShipInstructions__c,
		GiftWrapFlag__c, GiftWrapMessage__c,
	 	CurrencyCode__c, SubTotal__c, Customer__c, 
	    (SELECT ItemId__c, Category__c, Quantity__c, Size__c, Order__c FROM Items__r) 
	 	FROM Order__c 
	 	WHERE PoNumber__c = :poNumber]]></salesforce:salesforce-query>
			<salesforce:parameters><![CDATA[#[output application/json
---
{
	"poNumber": attributes.uriParams.'poNumber' as Number
}]]]></salesforce:parameters>
		</salesforce:query>
		<validation:is-not-empty-collection doc:name="Is not empty collection" doc:id="05e41219-3dbe-4154-9f8d-923c44ce5f39" config-ref="Validation_Config" message="Get orders returned empty" >
			<error-mapping sourceType="VALIDATION:EMPTY_COLLECTION" targetType="APP:NOT_FOUND" />
		</validation:is-not-empty-collection>
		<ee:transform doc:name="Transform SF to Json" doc:id="35109077-20b0-4f02-87ce-f39609f3e8b6" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
		orderData:{
					"poNumber": payload[0].PoNumber__c,
					"signatureRequiredFlag": payload[0].SignatureRequired__c,
					"shipInstructions": payload[0].ShipInstructions__c,
				    "giftWrapFlag": payload[0].GiftWrapFlag__c,
				    "giftWrapMessage": payload[0].GiftWrapMessage__c,
				    "currencyCode": payload[0].CurrencyCode__c,
				    "subTotal": payload[0].SubTotal__c,
				    "customerSalesforceId": payload[0].Customer__c
				},
		items: 
			payload[0].Items__r map (item, itemIndex) -> {
				id: item.ItemId__c,
				category: item.Category__c,
				quantity:item.Quantity__c,
				size: item.Size__c
			}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
</mule>
